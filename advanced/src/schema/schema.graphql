## NOTE: This schema was generated by Graphback and should not be changed manually

scalar DateTime

type Mutation {
  createPost(input: PostInput): Post!
  updatePost(input: PostInput): Post!
  deletePost(input: PostInput): Post!
  createUser(input: UserInput): User!
  updateUser(input: UserInput): User!
  deleteUser(input: UserInput): User!
}

"""@model"""
type Post {
  id: ID!
  createdAt: DateTime
  updatedAt: DateTime
  published: Boolean!
  title: String!
  content: String!

  """@manyToOne field: 'posts', key: 'authorId'"""
  author: User
}

input PostInput {
  id: ID
  createdAt: DateTime
  updatedAt: DateTime
  published: Boolean
  title: String
  content: String
  authorId: ID
}

type Query {
  findAllPosts(limit: Int, offset: Int): [Post]!
  findPosts(fields: PostInput, limit: Int, offset: Int): [Post]!
  findAllUsers(limit: Int, offset: Int): [User]!
  findUsers(fields: UserInput, limit: Int, offset: Int): [User]!
}

type Subscription {
  newPost(input: PostInput): Post!
  updatedPost(input: PostInput): Post!
  deletedPost(input: PostInput): Post!
  newUser(input: UserInput): User!
  updatedUser(input: UserInput): User!
  deletedUser(input: UserInput): User!
}

"""@model"""
type User {
  id: ID!
  email: String!
  password: String!
  name: String!

  """@oneToMany field: 'author', key: 'authorId'"""
  posts: [Post!]!
}

input UserInput {
  id: ID
  email: String
  password: String
  name: String
}
